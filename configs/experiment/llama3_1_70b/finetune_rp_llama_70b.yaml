dataset:
  name: redpajama_sample
  dataset_config:
    train_data: 
    - redpajama/train.json[50000]
    eval_data:
    - redpajama/train.json # [5000]
    max_eval_num: 1000
    max_length: 32768
    min_length: 1024
    chat_template: llama-3
    chunk_size: 1024  # sequence length for distilling
    seed: 42
    cache_dir: "data/rp"
  pretrained_model_config:
    pretrained_model_name_or_path: "meta-llama/Meta-Llama-3.1-70B"
    cache_dir: "/data_persistent2/sim_data/llama-3_1-70b" # Set this to where you want to save checkpoint weights
  preprocess_config: null

dataloader:
  batch_size: 1
  num_workers: 2
  drop_last: false
  pin_memory: true

optimizer:
  optim: adamw_torch_fused
  lr: 1e-4
  weight_decay: 0.0

lr_scheduler:
  lr_scheduler_type: reduce_lr_on_plateau
  mode: min
  factor: 0.1
  patience: 10
  min_lr: 0.00001

trainer: # HuggingFace Trainer-like arguments
  name: default_lm
  bf16: true
  train_split: train
  val_split: validation
  num_train_epochs: 2
  gradient_accumulation_steps: 8
  seed: 42
  batch_size: 1
  load_best_model_at_end: true
  greater_is_better: false
  metric_for_best_model: eval/loss # eval/rouge/geometric_mean
  logging_steps: 100
  evaluation_strategy: steps
  max_steps: -1
  eval_steps: 100
  max_eval_batches: null

finetune:
  method: lora
  kwargs:
    r: 8
    lora_alpha: 16 # 32
    lora_dropout: 0.05
    target_modules: ["q_proj", "v_proj"] # ,"k_proj",  "o_proj"]

fsdp:
  save_model: true 
  run_validation: true
  use_fp16: false
  save_optimizer: false
  gradient_clipping: true  # false
  gradient_clipping_threshold: 1.0

